<?php
/**
 * @file
 * Code for the ISB Standard feature.
 */

include_once 'isb_standard.features.inc';


/**
 * Implements hook_form_FORM_ID_alter()
 */
function isb_standard_form_standard_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#attached']['css'][] = drupal_get_path('module', 'isb_standard') . '/css/standard_node_add_form.css';
}

/**
 * Implements hook_preprocess_field().
 */
function isb_standard_preprocess_field(&$variables) {
  if ($variables['element']['#field_name'] == 'field_controlled_list_values') {
    $field_collection_labels = entity_load_single('field_collection_item', $variables['element']['#object']->field_controlled_list_labels[LANGUAGE_NONE][0]['value']);
    foreach ($variables['items'][0]['#rows'] as $id => $row) {
      $variables['items'][0]['#header'][$id]['data'] = $field_collection_labels->{'field_label_' . ($id + 1)}[LANGUAGE_NONE][0]['safe_value'];
    }
  }
}

/**
 * Implements hook_token_info().
 */
function isb_standard_token_info() {
  $info['tokens']['node']['field-standard-type-key'] = array(
    'name' => t('Standard Type - key'),
    'description' => t('Key of "field_standard_type" field allowed values.'),
  );
  return $info;
}
/**
 * Implements hook_tokens().
 */
function isb_standard_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'entity' && $data['token_type'] == 'node' && !empty($data['entity'])) {
    $node = $data['entity'];

    foreach ($tokens as $name => $original) {
      switch($name) {
        case 'field-standard-type-key':
          $replacements[$original] = $node->field_standard_type[LANGUAGE_NONE][0]['value'];
          break;
      }
    }
  return $replacements;
  }
}